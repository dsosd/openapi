openapi: 3.0.3
info:
	title: "tul::Dotit API"
	version: 0.0.0.2020.144.63146
	#optional
	description: "A TUL API that connects to Spotify"
	contact:
		#optional
		name: "Andy Huang"
		url: "https://github.com/dsosd/dotit/"
	license:
		name: "MIT"
		#optional
		url: "https://opensource.org/licenses/MIT"
paths:
	/playlist/{playlist}:
		get:
			responses:
				"200":
					description: "Server responded"
					#optional
					content:
						application/json:
							schema:
								allOf:
									-	oneOf:
										-	$ref: "#/components/schemas/__regular_wrapper"
										-	$ref: "#/components/schemas/__error_wrapper"
									- $ref: "#/components/schemas/playlist_get"
				"5XX":
					description: "Server errored: 1%* of responses"
			#optional
			summary: "Get playlist"
			description: "Get playlist's tracks' ids"
			parameters:
				-	name: "playlist"
					required: true
					in: "path"
					schema:
						$ref: "#/components/schemas/uuid_t"
				-	$ref: "#/components/parameters/__api_version_query"
		post:
			responses:
				"200":
					description: "Server responded"
					#optional
					content:
						application/json:
							schema:
								allOf:
									-	oneOf:
										-	$ref: "#/components/schemas/__regular_wrapper"
										-	$ref: "#/components/schemas/__error_wrapper"
									- $ref: "#/components/schemas/playlist_post"
				"5XX":
					description: "Server errored: 1%* of responses"
			#optional
			summary: "Set playlist"
			description: "Updates playlist's tracks. If `overwrite` is `true`, all tracks not specified are deleted. If `{playlist}` is the null uuid, a new playlist is created instead."
			parameters:
				-	name: "playlist"
					required: true
					in: "path"
					schema:
						$ref: "#/components/schemas/uuid_t"
				- name: "overwrite"
					required: false
					description: "Defaults to false"
					in: "query"
					schema:
						type: boolean
				-	$ref: "#/components/parameters/__api_version_query"
			requestBody:
				content:
					application/json:
						schema:
							$ref: "#/components/schemas/playlist_post_body"
		delete:
			responses:
				"200":
					description: "Server responded"
					#optional
					content:
						application/json:
							schema:
								allOf:
									-	oneOf:
										-	$ref: "#/components/schemas/__regular_wrapper"
										-	$ref: "#/components/schemas/__error_wrapper"
									- $ref: "#/components/schemas/playlist_delete"
				"5XX":
					description: "Server errored: 1%* of responses"
			#optional
			summary: "Delete playlist"
			description: "Deletes a playlist permanently*. If `force` is `true`, the playlist will be obliterated.\n\n\\* The playlist is still recoverable via the Spotify UI."
			parameters:
				-	name: "playlist"
					required: true
					in: "path"
					schema:
						$ref: "#/components/schemas/uuid_t"
				-	name: "force"
					required: false
					description: "Defaults to false"
					in: "query"
					schema:
						type: boolean
				-	$ref: "#/components/parameters/__api_version_query"
#optional
servers:
	-	url: "{SERVER_URL}"
		description: "Primary server"
components:
	parameters:
		__api_version_query:
			name: "__version"
			required: false
			in: "query"
			schema:
				$ref: "#/components/schemas/version_t"
	schemas:
		playlist_get:
			type: object
			properties:
				payload:
					type: object
					properties:
						tracks:
							type: array
							items:
								$ref: "#/components/schemas/uuid_t"
			example: {
				"payload": {
					"tracks": [
						"c6f8bb90_fb703bbc_e32b715a_94627ba0",
						"564284cc_b9baacc7_833ba9b5_d7b3eab6",
						"b33ae42d_165be04e_b2036327_61ec69d0"
					]
				}
			}
		playlist_post:
			type: object
			properties:
				payload:
					type: object
					properties:
						uuid:
							$ref: "#/components/schemas/uuid_t"
			example: {
				"payload": {
					"uuid": "f8d91f1c_dcb621c0_6bf82d54_8e3d8efa"
				}
			}
		playlist_post_body:
			type: object
			properties:
				tracks:
					type: array
					items:
						$ref: "#/components/schemas/uuid_t"
			example: {
				"tracks": [
					"ad086212_2fbe340d_6a3bd00e_a32affe4"
				]
			}
		playlist_delete:
			type: object
			properties:
				payload:
					$ref: "#/components/schemas/null_t"
			example: {
				"payload": {
				}
			}
		#for placeholding purposes only
		__sample_get:
			type: object
			properties:
				payload:
					type: object
					properties:
						"...":
							$ref: "#/components/schemas/str_t"
			example: {
				"payload": {
					"...": "Get request response placeholder..."
				}
			}
		__sample_post:
			type: object
			properties:
				payload:
					type: object
					properties:
						"...":
							$ref: "#/components/schemas/str_t"
			example: {
				"payload": {
					"...": "Post request response placeholder..."
				}
			}
		__sample_post_body:
			type: object
			properties:
				"...":
					$ref: "#/components/schemas/str_t"
			example: {
				"...": "Post request body placeholder..."
			}
		__sample_delete:
			type: object
			properties:
				payload:
					type: object
					properties:
						"...":
							$ref: "#/components/schemas/str_t"
			example: {
				"payload": {
					"...": "Delete request response placeholder..."
				}
			}
		#no error metadata
		__regular_wrapper:
			type: object
			description: "No errors occurred"
			properties:
				errors:
					type: array
					maxItems: 0
					items:
						type: integer
				severity:
					type: integer
				message:
					$ref: "#/components/schemas/str_t"
			example: {
				"severity": 0,
				"message": "No errors."
			}
		#at least one error metadata
		__error_wrapper:
			type: object
			description: "At least one error occurred"
			properties:
				errors:
					type: array
					items:
						type: integer
				severity:
					type: integer
				message:
					$ref: "#/components/schemas/str_t"
			example: {
				"errors": [33, 6],
				"severity": 4,
				"message": "Parameter `id` is invalid."
			}
		#types
		null_t:
			type: boolean
			nullable: true
		str_t:
			type: string
			format: string
			description: Generic string
			example: "Foo bar"
		uuid_t:
			type: string
			format: uuid
			description: "128-bit UUID"
			example: "c5982406_f1267d57_2069db81_8934d14e"
		version_t:
			type: string
			format: version
			description: "Version in format `major.minor.patch.year.day.second`"
			example: "0.0.0.2020.143.71260"
	securitySchemes:
		standard:
			type: "apiKey"
			name: "api_token"
			in: "header"
security:
	-	standard: []
externalDocs:
	url: "https://github.com/dsosd/openapi/"
	#optional
	description: "For more info"
